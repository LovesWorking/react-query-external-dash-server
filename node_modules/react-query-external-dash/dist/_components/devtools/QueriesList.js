import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useEffect, useState } from "react";
import QueryInformation from "./QueryInformation";
import QueryButton from "./QueryButton";
import { deepEqual } from "fast-equals";
export default function QueriesList({ allQueries, socket, currentUser, }) {
    const [selectedQuery, setSelectedQuery] = useState();
    useEffect(() => {
        const foundQuery = allQueries.find((query) => {
            if (!selectedQuery)
                return;
            const isMatching = deepEqual(query.options.queryKey, selectedQuery === null || selectedQuery === void 0 ? void 0 : selectedQuery.options.queryKey);
            return isMatching;
        });
        if (!foundQuery)
            return;
        setSelectedQuery(foundQuery);
    }, [allQueries, selectedQuery]);
    if (!allQueries)
        return null;
    return (_jsxs("div", { className: "flex overflow-auto divide-x-2 w-full", children: [_jsx("div", { className: "flex flex-col w-full ", children: allQueries.map((query, inex) => {
                    return (_jsx(QueryButton, { selected: selectedQuery, setSelected: setSelectedQuery, query: query }, inex));
                }) }), selectedQuery && (_jsx(QueryInformation, { socket: socket, selectedQuery: selectedQuery, currentUser: currentUser }))] }));
}
//# sourceMappingURL=QueriesList.js.map